﻿/*
    Slykuiper  - Motion Graphics Design
    Website & Portfolio - http://slykuiper.com
    Twitter - @slykuiper
    Instagram - @slykuiper
    Email - corbin@slykuiper.com
*/

var expressionNames = [];
var expressionCodes = [];
var expressionInfo = [];

function getExpressionInfo(expressionName){
    for(i=0;i<expressionNames.length;i++){
        if(expressionNames[i] == expressionName){return expressionInfo[i];}
    }
}

function applyExpression(expressionName){
    var thisLayer = app.project.activeItem.selectedLayers[0]; // selected layer
    var thisLayerProperties = app.project.activeItem.selectedProperties; // selected layer properties
    for(i=0;i<expressionNames.length;i++){
        if(expressionNames[i] == expressionName){ // found matching expression
            if(expressionName == "loopout pingpong" || expressionName == "loopout cycle" || expressionName == "Beam 3Dto2D" || expressionName == "path xpos offset"){
                //expression doesn't have any preset/sliders/controls
                for(a=0;a<thisLayerProperties.length;a++){
                    thisLayerProperties[a].expression = expressionCodes[i];
                }
            }else{
                // expression has presets/sliders/controls
                for(b=0;b<thisLayerProperties.length;b++){
                    thisLayer.Effects.addProperty(expressionName);
                    thisLayerProperties[b].expression = expressionCodes[i];
                }
            }
        }
    }
}

function createExpression(name, code, info, hasControls){
    expressionNames.push(name);
    expressionCodes.push(code); 
    expressionInfo.push(info); 
}

// expressions with controls
createExpression("seamless wiggle loop", 
    '// name: seamless wiggle loop\n' +
    '// author: Dan Ebberts\n' +
    't = time % effect("seamless wiggle loop")("Loop Time");\n' +
    'wiggle1 = wiggle(effect("seamless wiggle loop")("Frequency"), effect("seamless wiggle loop")("Amplitude"), 1, 0.5, t);\n' +
    'wiggle2 = wiggle(effect("seamless wiggle loop")("Frequency"), effect("seamless wiggle loop")("Amplitude"), 1, 0.5, t - effect("seamless wiggle loop")("Loop Time"));\n' +
    'linear(t, 0, effect("seamless wiggle loop")("Loop Time"), wiggle1, wiggle2)', 
    "Seamlessly wiggle any layer property with variable frequency, amplitude, and loop time.");
createExpression("keyframe overshoot", 
    '// name: keyframe overshoot\n' +
    '// author: Dan Ebberts\n' +
    'n = 0;\n' +
    'if (numKeys > 0){\n' +
    '  n = nearestKey(time).index;\n' +
    '  if (key(n).time > time) n--;\n' +
    '}\n' +
    'if (n > 0){\n' +
    '  t = time - key(n).time;\n' +
    '  amp = velocityAtTime(key(n).time - .001);\n' +
    '  w = effect("keyframe overshoot")("Frequency")*Math.PI*2;\n' +
    '  value + amp*(Math.sin(t*w)/Math.exp(effect("keyframe overshoot")("Decay")*t)/w);\n' +
    '}else\n' +
    '  value',
    "Overshoot expression applied to a keyframed animation. Adjustable frequency and decay variables.");
createExpression("keyframe bounce back", 
    '// name: keyframe bounce back\n' +
    '// author: Dan Ebberts\n' +
    'e = effect("keyframe bounce back")("e");\n' +
    'g = effect("keyframe bounce back")("g");\n' +
    'nMax = effect("keyframe bounce back")("nMax");\n' +
    'n = 0;\n' +
    'if (numKeys > 0){\n' +
    '  n = nearestKey(time).index;\n' +
    '  if (key(n).time > time) n--;\n' +
    '}\n' +
    'if (n > 0){\n' +
    '  t = time - key(n).time;\n' +
    '  v = -velocityAtTime(key(n).time - .001)*e;\n' +
    '  vl = length(v);\n' +
    '  if (value instanceof Array){\n' +
    '    vu = (vl > 0) ? normalize(v) : [0,0,0];\n' +
    '  }else{\n' +
    '    vu = (v < 0) ? -1 : 1;\n' +
    '  }\n' +
    '  tCur = 0;\n' +
    '  segDur = 2*vl/g;\n' +
    '  tNext = segDur;\n' +
    '  nb = 1; // number of bounces\n' +
    '  while (tNext < t && nb <= nMax){\n' +
    '    vl *= e;\n' +
    '    segDur *= e;\n' +
    '    tCur = tNext;\n' +
    '    tNext += segDur;\n' +
    '    nb++\n' +
    '  }\n' +
    '  if(nb <= nMax){\n' +
    '    delta = t - tCur;\n' +
    '    value +  vu*delta*(vl - g*delta/2);\n' +
    '  }else{\n' +
    '    value\n' +
    '  }\n' +
    '}else\n' +
    '  value',
    "This expression uses a property's velocity coming into a keyframe to calculate a bounce-back (in the direction opposite to the incoming animation) with a series of diminishing bounces.");
createExpression("inertial bounce", 
    '// name: inertial bounce\n' +
    '// author: Dan Ebberts\n' +
    'n = 0;\n' +
    'if (numKeys > 0){\n' +
    'n = nearestKey(time).index;\n' +
    'if (key(n).time > time){\n' +
    'n--;}}\n' +
    'if (n == 0){\n' +
    't = 0;\n' +
    '}else{\n' +
    't = time - key(n).time;\n' +
    '}\n' +
    'if (n > 0 && t < 1){\n' +
    'v = velocityAtTime(key(n).time - thisComp.frameDuration/10);\n' +
    'value + v*effect("inertial bounce")("Amplitude")*Math.sin(effect("inertial bounce")("Frequency")*t*2*Math.PI)/Math.exp(effect("inertial bounce")("Decay")*t);\n' +
    '}else{\n' +
    'value;\n' +
    '}',
    "Bouncing animation from one keyframe to another.");
createExpression("circle path", 
    '// name: circle path\n' +
    '// author: Ewan Smith\n' +
    'x=effect("circle path")("Radius")*Math.cos(degreesToRadians(time*effect("circle path")("Speed")));\n' +
    'y=effect("circle path")("Radius")*Math.sin(degreesToRadians(time*effect("circle path")("Speed")));\n' +
    'z=0;\n' +
    'centre=[effect("circle path")("Center")[0],effect("circle path")("Center")[1],0];\n' +
    'add(centre,[x,y,z]);',
    "Apply on the position property of a layer. Moves the position layer in a circular motion with variables for radius amount and angle/speed.");
createExpression("spiral path", 
    '// name: spiral path\n' +
    '// author: Ewan Smith\n' +
    'shrink=time+1;\n' +
    'radius=effect("spiral path")("Radius")/shrink;\n' +
    'x=radius*Math.cos(degreesToRadians(time*effect("spiral path")("Speed")));\n' +
    'y=radius*Math.sin(degreesToRadians(time*effect("spiral path")("Speed")));\n' +
    'z=time*effect("spiral path")("Z-Rate");\n' +
    'centre=[960,540,0];\n' +
    'add(centre,[x,y,z]);',
    "Apply on the position property of a layer. Moves the position layer in a spiral motion with variables for radius amount, angle/speed, and shrink or grow (time-1).");
createExpression("rot based xpos", 
    '// name: rotation based on x position\n' +
    'x = transform.position[0]+effect("rot based xpos")("Distance");\n' +
    '(360*x/(Math.PI*width))*effect("rot based xpos")("Torque");', 
    "Rotate a layer based on its x position.");
createExpression("rot based ypos", 
    '// name: rotation based on y position\n' +
    'y = transform.position[1]+effect("rot based ypos")("Distance");\n' +
    '(360*y/(Math.PI*width))*torque = effect("rot based ypos")("Torque");', 
    "Rotate a layer based on its y position.");
createExpression("Angle Duration Control", 
    '// name: Angle Duration Control\n' +
    '// author: Mike Overbeck\n' +
    'var theRotator = effect("Angle Duration Control")("Angle") % 360;\n' +
    'var theDuration = thisLayer.source.duration;\n' +
    'var rotFactor = theDuration / 360;\n' +
    'if(theRotator < 0){\n' +
    'theRotator = 360 + theRotator;\n' +
    '}\n' +
    'theRotator * rotFactor;',
    "Apply to layer's Time Remap. Creates an Angle Control on looped rotating source footage. Add an Angle Control expression control to the layer and link up to theRotator variable.");
// expression without controls
createExpression("loopout pingpong", 
    '// name: loopout pingpong\n' +
    'loopOut("pingpong");',
    "Loops a segment of time that is measured from the last keyframe on the layer back toward the In point of the layer. Repeats the specified segment, alternating between forward and backward.");
createExpression("loopout cycle", 
    '// name: loopout cycle\n' +
    'loopOut("cycle", 0);', 
    "Loops all keyframes in a cyclical manner, starting from first keyframe to last.");
createExpression("Beam 3Dto2D", 
    '// name: Beam 3Dto2D\n' +
    'L = layerhere;\n' +
    'L.toComp([0,0,0]);',
    "Use this on a solid layer with the Beam Effect applied, on the Starting Point and Ending Point. L needs to be the 3d layers in your comp.");
createExpression("path xpos offset", 
    '// name: trim path offset based on x position\n' +
    '// apply this to the shape layers trim path offset\n' +
    '// get pathLength from illustrator\n' +
    'pathScale = transform.scale[0]/100;\n' +
    'pathLength = 1000;\n' +
    'pathLength=pathLength*pathScale;\n' +
    'transform.position[0]/pathLength * 360;',
    "Apply to a shapelayer Trim Paths operator. Creates tracks/treads that appear to stay on ground and move in the correct motion. Get the pathLength variable from a path in Illustrator. Select the path, go to Window > Document Info > Dropdown Icon > Objects");
    
// icon drawing function created by Adam Plouff at Battle Axe
var JSON;JSON||(JSON={}); (function(){function k(a){return a<10?"0"+a:a}function o(a){p.lastIndex=0;return p.test(a)?'"'+a.replace(p,function(a){var c=r[a];return typeof c==="string"?c:"\\u"+("0000"+a.charCodeAt(0).toString(16)).slice(-4)})+'"':'"'+a+'"'}function l(a,j){var c,d,h,m,g=e,f,b=j[a];b&&typeof b==="object"&&typeof b.toJSON==="function"&&(b=b.toJSON(a));typeof i==="function"&&(b=i.call(j,a,b));switch(typeof b){case "string":return o(b);case "number":return isFinite(b)?String(b):"null";case "boolean":case "null":return String(b);case "object":if(!b)return"null"; e+=n;f=[];if(Object.prototype.toString.apply(b)==="[object Array]"){m=b.length;for(c=0;c<m;c+=1)f[c]=l(c,b)||"null";h=f.length===0?"[]":e?"[\n"+e+f.join(",\n"+e)+"\n"+g+"]":"["+f.join(",")+"]";e=g;return h}if(i&&typeof i==="object"){m=i.length;for(c=0;c<m;c+=1)typeof i[c]==="string"&&(d=i[c],(h=l(d,b))&&f.push(o(d)+(e?": ":":")+h))}else for(d in b)Object.prototype.hasOwnProperty.call(b,d)&&(h=l(d,b))&&f.push(o(d)+(e?": ":":")+h);h=f.length===0?"{}":e?"{\n"+e+f.join(",\n"+e)+"\n"+g+"}":"{"+f.join(",")+ "}";e=g;return h}}if(typeof Date.prototype.toJSON!=="function")Date.prototype.toJSON=function(){return isFinite(this.valueOf())?this.getUTCFullYear()+"-"+k(this.getUTCMonth()+1)+"-"+k(this.getUTCDate())+"T"+k(this.getUTCHours())+":"+k(this.getUTCMinutes())+":"+k(this.getUTCSeconds())+"Z":null},String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON=function(){return this.valueOf()};var q=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, p=/[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,e,n,r={"\u0008":"\\b","\t":"\\t","\n":"\\n","\u000c":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"},i;if(typeof JSON.stringify!=="function")JSON.stringify=function(a,j,c){var d;n=e="";if(typeof c==="number")for(d=0;d<c;d+=1)n+=" ";else typeof c==="string"&&(n=c);if((i=j)&&typeof j!=="function"&&(typeof j!=="object"||typeof j.length!=="number"))throw Error("JSON.stringify");return l("", {"":a})};if(typeof JSON.parse!=="function")JSON.parse=function(a,e){function c(a,d){var g,f,b=a[d];if(b&&typeof b==="object")for(g in b)Object.prototype.hasOwnProperty.call(b,g)&&(f=c(b,g),f!==void 0?b[g]=f:delete b[g]);return e.call(a,d,b)}var d,a=String(a);q.lastIndex=0;q.test(a)&&(a=a.replace(q,function(a){return"\\u"+("0000"+a.charCodeAt(0).toString(16)).slice(-4)}));if(/^[\],:{}\s]*$/.test(a.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,"@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, "]").replace(/(?:^|:|,)(?:\s*\[)+/g,"")))return d=eval("("+a+")"),typeof e==="function"?c({"":d},""):d;throw new SyntaxError("JSON.parse");}})();
var icon_textlayer = ['43.8,1.3 43.8,7.8 35.5,7.8 35.5,42.5 28.9,42.5 28.9,7.8 20.6,7.8 20.6,1.3',
                                '2.5,2.9 2.5,9.5 17.4,9.5 17.4,7.8 15.7,7.8 15.7,2.9',
                                '2.5,11.1 2.5,17.8 25.6,17.8 25.6,16.1 24,16.1 24,11.1',
                                '2.5,19.4 2.5,26 25.6,26 25.6,24.4 24,24.4 24,19.4',
                                '2.5,27.6 2.5,34.3 25.6,34.3 25.6,32.6 24,32.6 24,27.6',
                                '2.5,35.9 2.5,42.5 25.6,42.5 25.6,40.8 24,40.8 24,35.9'];                        
var icon_solidlayer = ['2.5,2.5 14.2,2.5 14.2,5.8 15.8,5.8 15.8,9.2 2.5,9.2',
                                '42.5,2.5 42.5,9.2 30.8,9.2 30.8,5.8 29.2,5.8 29.2,2.5',
                                '15.8,2.5 15.8,4.2 17.5,4.2 17.5,9.2 29.2,9.2 29.2,7.5 27.5,7.5 27.5,2.5',
                                '2.5,10.8 14.2,10.8 14.2,14.2 15.8,14.2 15.8,17.5 2.5,17.5',
                                '42.5,10.8 42.5,17.5 30.8,17.5 30.8,14.2 29.2,14.2 29.2,10.8',
                                '15.8,10.8 15.8,12.5 17.5,12.5 17.5,17.5 29.2,17.5 29.2,15.8 27.5,15.8 27.5,10.8',
                                '2.5,19.2 14.2,19.2 14.2,22.5 15.8,22.5 15.8,25.8 2.5,25.8',
                                '42.5,19.2 42.5,25.8 30.8,25.8 30.8,22.5 29.2,22.5 29.2,19.2',
                                '15.8,19.2 15.8,20.8 17.5,20.8 17.5,25.8 29.2,25.8 29.2,24.2 27.5,24.2 27.5,19.2',
                                '2.5,27.5 14.2,27.5 14.2,30.8 15.8,30.8 15.8,34.2 2.5,34.2',
                                '42.5,27.5 42.5,34.2 30.8,34.2 30.8,30.8 29.2,30.8 29.2,27.5',
                                '15.8,27.5 15.8,29.2 17.5,29.2 17.5,34.2 29.2,34.2 29.2,32.5 27.5,32.5 27.5,27.5',
                                '2.5,35.8 14.2,35.8 14.2,39.2 15.8,39.2 15.8,42.5 2.5,42.5',
                                '42.5,35.8 42.5,42.5 30.8,42.5 30.8,39.2 29.2,39.2 29.2,35.8',
                                '15.8,35.8 15.8,37.5 17.5,37.5 17.5,42.5 29.2,42.5 29.2,40.8 27.5,40.8 27.5,35.8'];
                                
var icon_lightlayer = ['22.5,2.5 29.2,4.2 32.5,5.8 35.8,9.2 37.5,14.2 37.5,19.2 35.8,24.2 32.5,27.5 30.8,29.2 29.2,29.2 29.2,35.8 27.5,37.5 25.8,37.5 25.8,39.2 27.5,39.2 27.5,40.8 25.8,40.8 25.8,42.5 19.2,42.5 19.2,40.8 17.5,40.8 17.5,39.2 19.2,39.2 19.2,37.5 17.5,37.5 15.8,35.8 15.8,29.2 14.2,29.2 12.5,27.5 9.2,24.2 7.5,19.2 7.5,14.2 9.2,9.2 12.5,5.8 15.8,4.2'];
var icon_cameralayer = ['5.8,9.2 10.8,9.2 14.2,10.8 15.8,14.2 17.5,14.2 17.5,10.8 19.2,7.5 24.2,4.2 30.8,4.2 34.2,5.8 37.5,9.2 37.5,15.8 35.8,19.2 34.2,20.8 32.5,22.5 35.8,22.5 35.8,24.2 39.2,24.2 44.2,20.8 44.2,34.2 39.2,32.5 35.8,32.5 35.8,39.2 5.8,39.2 5.8,30.8 4.2,30.8 2.5,29.2 0.8,25.8 4.2,25.8 5.8,27.5 5.8,24.2 2.5,22.5 0,18.1 0.8,14.2 2.5,10.8'];
var icon_nulllayer = ['2.5,2.5 10.5,2.5 10.5,5.2 18.5,5.2 18.5,2.5 26.5,2.5 26.5,5.2 34.5,5.2 34.5,2.5 42.5,2.5 42.5,10.5 39.8,10.5 39.8,18.5 42.5,18.5 42.5,26.5 39.8,26.5 39.8,34.5 42.5,34.5 42.5,42.5 34.5,42.5 34.5,39.8 26.5,39.8 26.5,42.5 18.5,42.5 18.5,39.8 10.5,39.8 10.5,42.5 2.5,42.5 2.5,34.5 5.2,34.5 5.2,26.5 2.5,26.5 2.5,18.5 5.2,18.5 5.2,10.5 2.5,10.5 2.5,5.2 5.2,5.2 5.2,7.8 7.8,7.8 7.8,18.5 10.5,18.5 10.5,26.5 7.8,26.5 7.8,34.5 10.5,34.5 10.5,37.2 18.5,37.2 18.5,34.5 26.5,34.5 26.5,37.2 34.5,37.2 34.5,34.5 37.2,34.5 37.2,26.5 34.5,26.5 34.5,18.5 37.2,18.5 37.2,10.5 34.5,10.5 34.5,7.8 26.5,7.8 26.5,10.5 18.5,10.5 18.5,7.8 7.8,7.8 7.8,5.2 2.5,5.2'];
var icon_shapelayer = ['19.2,15.8 12.7,15.3 8.7,20.3 7.2,14 1.2,11.7 6.7,8.3 7,1.9 11.9,6.1 18.2,4.5 15.7,10.4',
                                '41.9,19.2 33,21.1 29.5,29.5 24.9,21.6 15.8,21 21.9,14.2 19.8,5.3 28.1,9 35.9,4.2 35,13.2',
                                '23.2,36.7 15.9,43.6 6.1,40.8 3.8,30.9 11.1,24 20.8,26.8',
                                '26.8,38.3 39.1,43.6 43.5,33.5 41.5,32.6 42.4,30.5 32.2,26.1'];
var icon_adjustmentlayer = ['5.2,2.5 13.2,2.5 13.2,5.2 42.5,5.2 42.5,7.8 13.2,7.8 13.2,10.5 5.2,10.5 5.2,7.8 2.5,7.8 2.5,5.2 5.2,5.2',
                                '5.2,34.5 13.2,34.5 13.2,37.2 42.5,37.2 42.5,39.8 13.2,39.8 13.2,42.5 5.2,42.5 5.2,39.8 2.5,39.8 2.5,37.2 5.2,37.2 ',
                                '39.8,18.5 31.8,18.5 31.8,21.2 2.5,21.2 2.5,23.8 31.8,23.8 31.8,26.5 39.8,26.5 39.8,23.8 42.5,23.8 42.5,21.2 39.8,21.2'];             
var icon_logo = ['35.9,19.7 32.6,19.7 22.6,10.9 11.4,20.9 38.5,20.8 38.6,21.9 22.7,35.9 9.3,24.2 12.7,24.2 22.6,33 33.9,23.2 6.8,23.1 6.8,22 22.7,8',
                            '34.8,11.4 36.4,13.6 37.6,15.9 38.4,18.5 38.9,16.8 38.8,14 36.6,12.2',
                            '37.4,28.4 36.2,30.8 34.6,32.8 32.6,34.7 34.4,34.4 36.8,33.1 37.5,30.3',
                            '21,38 18.3,37.6 15.9,36.6 13.5,35.3 14.4,36.9 16.3,38.9 19.1,38.7',
                            '13,34.8 10.9,33 9.2,31 7.8,28.7 7.8,30.5 8.4,33.1 11,34.4',
                            '7.4,27.3 6.7,24.7 6.5,22.1 6.7,19.4 5.7,20.8 4.7,23.3 6,25.9',
                            '31.9,35.2 29.5,36.6 27.1,37.4 24.4,38 26.1,38.6 28.8,38.9 30.9,36.9',
                            '6.9,18.4 7.7,15.8 8.9,13.6 10.6,11.4 8.9,12 6.7,13.6 6.5,16.5',
                            '11.1,10.7 13.1,8.9 15.3,7.6 17.8,6.6 16.1,6.3 13.4,6.5 11.7,8.9',
                            '18.7,6.3 21.4,5.8 23.9,5.8 26.6,6.2 25.3,5.1 22.8,3.9 20.2,5',
                            '27.4,6.7 29.9,7.6 32.1,9 34.2,10.7 33.7,9 32.2,6.7 29.3,6.4',
                            '38.6,19.6 38.9,22.3 38.6,24.9 37.9,27.5 39.2,26.3 40.6,24 39.7,21.2',
                            '30.2,1.5 32.3,3.3 33.7,5.6 33.2,6.1 32.3,6 28.9,4.9 25.7,3.7 24.9,3.1 24.8,2.3 27.6,1.6',
                            '39.9,8.5 40.7,11.2 40.7,13.9 40.1,14.1 39.3,13.5 37,10.8 34.8,8.1 34.5,7.2 34.8,6.4 37.6,7.3',
                            '44.3,19.8 43.6,22.5 42.1,24.8 41.5,24.6 41.2,23.6 40.7,20.2 40.3,16.7 40.5,15.7 41.2,15.2 43.1,17.5',
                            '42.2,31.7 40.1,33.5 37.6,34.6 37.2,34.1 37.4,33.2 38.9,30 40.5,26.9 41.2,26.2 42.1,26.2 42.4,29.1',
                            '34.1,40.6 31.3,41 28.6,40.7 28.5,40 29.2,39.3 32.2,37.5 35.2,35.7 36.2,35.5 36.9,35.9 35.6,38.6',
                            '22.7,43.8 20.1,42.7 18,41 18.3,40.4 19.2,40.2 22.8,40.1 26.2,40.2 27.2,40.6 27.6,41.3 25.1,42.9',
                            '11.3,40.6 9.6,38.3 8.7,35.8 9.2,35.4 10.1,35.7 13.2,37.5 16.2,39.3 16.8,40.1 16.8,40.9 13.8,41',
                            '3.3,32 3,29.2 3.5,26.5 4.1,26.5 4.7,27.2 6.5,30.2 8.1,33.3 8.3,34.3 7.8,35 5.2,33.6',
                            '0.9,20.1 2.2,17.6 4.1,15.7 4.7,16 4.8,17 4.6,20.5 4.3,23.9 3.8,24.9 3.1,25.2 1.7,22.6',
                            '5.4,8.6 7.9,7.2 10.5,6.5 10.8,7.1 10.4,7.9 8.4,10.8 6.3,13.6 5.4,14.2 4.6,14 4.8,11.1',
                            '15,1.5 17.8,1.6 20.4,2.4 20.4,3 19.6,3.6 16.3,4.9 13.1,6.1 12.1,6.2 11.4,5.6 13.2,3.2'];    
var icon_newcomp = ['8.3,13.3 3.3,43.3 2.8,43.2 2.2,43 1.8,42.4 1.7,41.7 1.7,3.3 1.9,2.6 2.3,2.1 2.7,1.8 3.3,1.7 10,1.7 10.6,1.9 12.6,4.6 13.3,5 40,5 40.7,5.2 41.2,5.5 41.5,6.1 41.7,6.7 41.7,11.7 10,11.7 9.4,11.9 8.8,12.2 8.5,12.7',
                            '9.2,13.6 9.3,13.1 9.6,12.8 10.1,12.5 10.8,12.5 40.6,12.6 41.2,12.8 41.5,13.2 41.7,13.6 41.9,14.4 41.7,41.9 41.5,42.4 41.3,42.9 40.8,43.2 40.3,43.3 4.2,43.4'];
var icon_precomp = ['8.3,13.3 3.3,43.3 2.8,43.2 2.2,43 1.8,42.4 1.7,41.7 1.7,3.3 1.9,2.6 2.3,2.1 2.7,1.8 3.3,1.7 10,1.7 10.6,1.9 12.6,4.6 13.3,5 40,5 40.7,5.2 41.2,5.5 41.5,6.1 41.7,6.7 41.7,11.7 10,11.7 9.4,11.9 8.8,12.2 8.5,12.7',
                            '40.6,12.7 41.2,12.9 41.5,13.2 41.7,13.6 41.9,14.4 41.7,41.9 41.5,42.4 41.3,42.9 40.8,43.2 40.3,43.3 4.2,43.4 9.2,13.6 9.3,13.1 9.6,12.8 10.1,12.5 10.6,12.5 21,12.6 21,25 14.9,25 14.7,30 21,30 21,37 26,37 26,30 31.9,30 32,25 26,25 26,18 21.3,18 21.3,12.5'];


// ================ FUNCTIONS =============

/** draw an colored icon button - returns a button object
	@parem {parentObj} - object - ScriptUI panel or group
	@parem {iconVec} - array of strings - SVG coords as string
	@parem {iconColor} - object - icon color
	@parem {size} - array - icon size
*/
function buttonColorVector(parentObj, iconVec, iconColor, size) {
	var artSize = size;                                                         // defines the artsize before resizeing the button container
	var btn = parentObj.add('button', [0,0,size[0],size[1], undefined]);				// add a basic button to style
		btn.coord = vecToPoints(iconVec);
		btn.onDraw = vecDraw;

		return btn;

	function vecToPoints(vecCoord) {                                            // func that converts SCG coords to ScriptUI coords
		var points = [];
		var n;

		for(var i = 0; i < vecCoord.length; i++) {                                // loop through paths in a multi path icon
			var eachNum = vecCoord[i].split(/[\s,]/);                               // create an array of all the numbers - split at spaces or commas
			var coordinates = [];
			var sets = [];

			for (var k = 0; k < eachNum.length; k+=2) {                             // AI adds commas between coords, Sketch just spaces
				sets.push(eachNum[k] + ',' + eachNum[k+1]);                           // add pairs of numbers to an array
			}

			for (var j = 0; j < sets.length; j++) {                                 // loop through all sets
				n = sets[j].split(',');                                               // split each set apart
				coordinates[j] = n;
				coordinates[j][0] = (parseFloat(coordinates[j][0]));
				coordinates[j][1] = (parseFloat(coordinates[j][1]));
			}

			points.push(coordinates);                                               // combine each x,y as a 2D array
		}
		return points;                                                            // return the 2D array
	}

	function vecDraw() {                                                        // func that does the drawing
		with ( this ) {
			graphics.drawOSControl();

			// draw background
			graphics.rectPath(0,0,size[0],size[1]);
			graphics.fillPath(graphics.newBrush(graphics.BrushType.SOLID_COLOR, [0,0,0,0.15]));                 // set background color

			// draw shape
			try {
			for (var i = 0; i < coord.length; i++) {
				var line = coord[i];

				graphics.newPath();
				graphics.moveTo(line[0][0] + (size[0]/2 - artSize[0]/2), line[0][1] + (size[1]/2 - artSize[1]/2));
				for (var j = 0; j < line.length; j++) {
					graphics.lineTo(line[j][0] + (size[0]/2 - artSize[0]/2), line[j][1] + (size[1]/2 - artSize[1]/2));
				}
				graphics.fillPath(graphics.newBrush(graphics.BrushType.SOLID_COLOR, hexToArray(iconColor)));      // set icon color
			}
			} catch (e) {}
		}
	}

	function hexToArray(hexString) {                                          // func that converts hex to AE color string
		var hexColor = hexString.replace('#', '');
		var r = parseInt(hexColor.slice(0, 2), 16) / 255,
				g = parseInt(hexColor.slice(2, 4), 16) / 255,
				b = parseInt(hexColor.slice(4, 6), 16) / 255;
		return [r, g, b, 1];
	}
}

/** draw an text button with a colored background - returns a button object
	@parem {parentObj} - object - ScriptUI panel or group
	@parem {accentColor} - string - icon color
	@parem {buttonText} - string - button text
*/
function buttonColorText(parentObj, accentColor, buttonText) {
	var btn = parentObj.add('button', undefined, '', {name: 'ok'});    // add a basic button to style
			btn.fillBrush = btn.graphics.newBrush( btn.graphics.BrushType.SOLID_COLOR, hexToArray(accentColor) );

			btn.text = buttonText.toUpperCase();

			btn.textPen = btn.graphics.newPen( btn.graphics.PenType.SOLID_COLOR, hexToArray('#ffffff'), 1 );

			btn.onDraw = gfxDraw;

	return btn;


	function gfxDraw() {                                                        // func that does the drawing
		with ( this ) {
			graphics.drawOSControl();

			// draw background
			graphics.rectPath(0,0,size[0],size[1]);
			graphics.fillPath(fillBrush);                 // set background color

			if (text) {
				graphics.drawString(
					text,
					textPen,
					(size[0]-graphics.measureString(text, graphics.font, size[0])[0])/2,
					(size[1]-graphics.measureString(text, graphics.font, size[0])[1])/1.75,
					graphics.font);
			}
		}
	}

	function hexToArray(hexString) {                                          // func that converts hex to AE color string
		var hexColor = hexString.replace('#', '');
		var r = parseInt(hexColor.slice(0, 2), 16) / 255,
				g = parseInt(hexColor.slice(2, 4), 16) / 255,
				b = parseInt(hexColor.slice(4, 6), 16) / 255;
		return [r, g, b, 1];
	}
}

/** open url in browser
	@parem {url} - string - url
*/
function visitURL(url) {    // create clickable links
		if ($.os.indexOf("Windows") != -1) {
				system.callSystem('cmd /c "' + Folder.commonFiles.parent.fsName + "\\Internet Explorer\\iexplore.exe" + '" ' + url);
		} else {
				var cmd = 'open "' + url + '"';
				system.callSystem(cmd);
		}
}

var presetEffects = "<!-- Slykuiper_ToolKit_Start -->\r\n" +
"<Effect matchname='seamless wiggle loop' name='$$$/AE/Preset/slykuiper_expr1=seamless wiggle loop'>\r\n" +
"<Slider name='$$$/AE/Preset/slider=Frequency' default='1' valid_min='0' valid_max='10' slider_min='0' slider_max='10'  precision='2' />\r\n" +
"<Slider name='$$$/AE/Preset/slider=Amplitude' default='50' valid_min='-100000' valid_max='100000' slider_min='-100000' slider_max='100000'  precision='2' />\r\n" +
"<Slider name='$$$/AE/Preset/slider=Loop Time' default='3' valid_min='0' valid_max='1000' slider_min='0' slider_max='1000'  precision='2' />\r\n" +
"</Effect>\r\n" +
"<Effect matchname='keyframe overshoot' name='$$$/AE/Preset/slykuiper_expr2=keyframe overshoot'>\r\n" +
"<Slider name='$$$/AE/Preset/slider=Frequency' default='2' valid_min='0.001' valid_max='100' slider_min='0.001' slider_max='10'  precision='2' />\r\n" +
"<Slider name='$$$/AE/Preset/slider=Decay' default='5' valid_min='0' valid_max='100' slider_min='0' slider_max='10' precision='2' />\r\n" +
"</Effect>\r\n" +
"<Effect matchname='keyframe bounce back' name='$$$/AE/Preset/slykuiper_expr3=keyframe bounce back'>\r\n" +
"<Slider name='$$$/AE/Preset/slider=e' default='0.7' valid_min='-100000' valid_max='100000' slider_min='-10' slider_max='10'  precision='2' />\r\n" +
"<Slider name='$$$/AE/Preset/slider=g' default='5000' valid_min='-100000' valid_max='100000' slider_min='-10000' slider_max='10000' />\r\n" +
"<Slider name='$$$/AE/Preset/slider=nMax' default='9' valid_min='0' valid_max='10' slider_min='0' slider_max='1000' />\r\n" +
"</Effect>\r\n" +
"<Effect matchname='inertial bounce' name='$$$/AE/Preset/slykuiper_expr4=inertial bounce'>\r\n" +
"<Slider name='$$$/AE/Preset/slider=Amplitude' default='0.05' valid_min='-100000' valid_max='100000' slider_min='-100' slider_max='100'  precision='2' />\r\n" +
"<Slider name='$$$/AE/Preset/slider=Frequency' default='4' valid_min='0' valid_max='1000' slider_min='0' slider_max='1000' precision='1' />\r\n" +
"<Slider name='$$$/AE/Preset/slider=Decay' default='8' valid_min='0' valid_max='10' slider_min='0' slider_max='1000' precision='1' />\r\n" +
"</Effect>\r\n" +
"<Effect matchname='circle path' name='$$$/AE/Preset/slykuiper_expr5=circle path'>\r\n" +
"<Slider name='$$$/AE/Preset/slider=Radius' default='300' valid_min='0' valid_max='10000' slider_min='0' slider_max='10000' />\r\n" +
"<Slider name='$$$/AE/Preset/slider=Speed' default='200' valid_min='0' valid_max='1000' slider_min='0' slider_max='1000' />\r\n" +
"<Point name='$$$/AE/Preset/point=Center' default_x='0.5' default_y='0.5' />\r\n" +
"</Effect>\r\n" +
"<Effect matchname='spiral path' name='$$$/AE/Preset/slykuiper_expr6=spiral path'>\r\n" +
"<Slider name='$$$/AE/Preset/slider=Radius' default='300' valid_min='0' valid_max='10000' slider_min='0' slider_max='10000' />\r\n" +
"<Slider name='$$$/AE/Preset/slider=Speed' default='200' valid_min='0' valid_max='1000' slider_min='0' slider_max='1000' />\r\n" +
"<Slider name='$$$/AE/Preset/slider=Z-Rate' default='0' valid_min='-10000' valid_max='10000' slider_min='-10000' slider_max='10000' />\r\n" +
"</Effect>\r\n" +
"<Effect matchname='rot based xpos' name='$$$/AE/Preset/slykuiper_expr7=rot based xpos'>\r\n" +
"<Slider name='$$$/AE/Preset/slider=Distance' default='0' valid_min='-100000' valid_max='100000' slider_min='-100000' slider_max='100000' />\r\n" +
"<Slider name='$$$/AE/Preset/slider=Torque' default='1' valid_min='-1000' valid_max='1000' slider_min='-100' slider_max='100' />\r\n" +
"</Effect>\r\n" +
"<Effect matchname='rot based ypos' name='$$$/AE/Preset/slykuiper_expr8=rot based ypos'>\r\n" +
"<Slider name='$$$/AE/Preset/slider=Distance' default='0' valid_min='-100000' valid_max='100000' slider_min='-100000' slider_max='100000' />\r\n" +
"<Slider name='$$$/AE/Preset/slider=Torque' default='1' valid_min='-1000' valid_max='1000' slider_min='-100' slider_max='100' />\r\n" +
"</Effect>\r\n" +
"<Effect matchname='Angle Duration Control' name='$$$/AE/Preset/slykuiper_expr9=Angle Duration Control'>\r\n" +
"<Angle name='$$$/AE/Preset/angle=Angle' default='0' />\r\n" +
"</Effect>\r\n" +
"<!-- Slykuiper_ToolKit_End -->\r\n";

installPresets = function (){ // add presets to preset.xml
if (app.preferences.getPrefAsLong("Main Pref Section", "Pref_SCRIPTING_FILE_NETWORK_SECURITY") == 1)
{
    var appPath = Folder.appPackage.fsName;
    var presetEffectsFile = new File(appPath + "\\PresetEffects.xml");
    if ($.os.toLowerCase().indexOf("mac") >= 0) presetEffectsFile = new File(appPath + "/Contents/Resources/PresetEffects.xml");
    if (presetEffectsFile.exists)
    {
        presetEffectsFile.open("r","TEXT");
        var presetEffectsString = presetEffectsFile.read();
        presetEffectsFile.close();
        //update
        var startIndex = presetEffectsString.indexOf("<!-- Slykuiper_ToolKit_Start -->");
        var endIndex = presetEffectsString.indexOf("<!-- Slykuiper_ToolKit_End -->") + 32;
        if (startIndex >= 0)
        {
            var stringToRemove = presetEffectsString.substring(startIndex,endIndex);
            presetEffectsString = presetEffectsString.replace(stringToRemove,presetEffects);
        }
        else
        {
            presetEffectsString = presetEffectsString.replace("</Effects>",presetEffects + "\r\n</Effects>");
        }
        //gets write access
        if ($.os.toLowerCase().indexOf("mac") >= 0)
        {
            var cmd = "chmod u+rw  " + "\"" + appPath + "/PresetEffects.xml\"";
            system.callSystem(cmd);
        }
        else
        {
            var cmd = "cmd /c attrib -r /S /D \"" + appPath + "\"";
            system.callSystem(cmd);
            cmd = "cmd /c attrib -r /S /D \"" + appPath + "\\PresetEffects.xml\"";
            system.callSystem(cmd);
        }
        //backup file
        presetEffectsFile.copy(presetEffectsFile.fullName + ".bak");
        //write the new file
        var isReadOnly = presetEffectsFile.readonly;
        presetEffectsFile.readonly = false;
        presetEffectsFile.open("w","TEXT");
        presetEffectsFile.write(presetEffectsString);
        presetEffectsFile.close();
        presetEffectsFile.readonly = isReadOnly;
        }
    }
}